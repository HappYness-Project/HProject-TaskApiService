
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;
SET default_tablespace = '';
SET default_table_access_method = heap;

CREATE TABLE public.user (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    username CHARACTER VARYING(100),
    first_name character varying(255),
    last_name character varying(255),
    email character varying(255),
    is_active boolean,
    created_at timestamp without time zone,
    updated_at timestamp without time zone,
    CONSTRAINT pk_user PRIMARY KEY (id)
);
-- SELECT pg_catalog.setval('public.users_id_seq', 1, true);
CREATE TABLE IF NOT EXISTS public.usergroup (
    id int NOT NULL,
    name CHARACTER VARYING(100) NOT NULL,
    description CHARACTER VARYING(255) NOT NULL,
    type CHARACTER VARYING(30),
    thumbnailUrl CHARACTER VARYING(255),
    is_active boolean,
    CONSTRAINT pk_usergroup PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.task (
    id uuid NOT NULL,
    name character varying(100) NOT NULL,
    description character varying(512),
    type CHARACTER VARYING(20),
    created_at timestamp with time zone,
    updated_at timestamp with time zone,
    target_date timestamp with time zone,
    priority character varying(50),
    category character varying(20),
    is_completed boolean NOT NULL,
    is_important boolean NOT NULL,
    CONSTRAINT pk_task PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.taskcontainer (
    id uuid NOT NULL,
    name CHARACTER varying(100) NOT NULL,
    description CHARACTER VARYING(255),
    is_active boolean,
    activity_level INT,
    type CHARACTER (50),
    usergroup_id bigint,
    CONSTRAINT pk_taskcontainer PRIMARY KEY (id),
    CONSTRAINT fk_usergroup_id_taskcontainer_usergroupId FOREIGN KEY (usergroup_id)
        REFERENCES public.usergroup (id) MATCH SIMPLE
        ON UPDATE NO ACTION
        ON DELETE NO ACTION
        DEFERRABLE INITIALLY DEFERRED
);

CREATE TABLE IF NOT EXISTS public.taskcontainer_task (
  taskcontainer_id uuid NOT NULL,
  task_id uuid NOT NULL,
  PRIMARY KEY (taskcontainer_id, task_id),
  CONSTRAINT fk_taskcontainer_task_taskcontainer_id FOREIGN KEY(taskcontainer_id) REFERENCES public.taskcontainer(id),
  CONSTRAINT fk_taskcontainer_task_task_id FOREIGN KEY(task_id) REFERENCES public.task(id)
);

CREATE TABLE IF NOT EXISTS public.usersetting (
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    default_group_id integer,
    CONSTRAINT pk_usersetting PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.usergroup_user (
  usergroup_id bigint NOT NULL,
  user_id bigint NOT NULL,
  PRIMARY KEY (usergroup_id, user_id),
  CONSTRAINT fk_usergroup_user_usergroup_id FOREIGN KEY(usergroup_id) REFERENCES public.usergroup(id),
  CONSTRAINT fk_usergroup_user_user_id FOREIGN KEY(user_id) REFERENCES public.user(id)
);


INSERT INTO public.user(username, first_name, last_name, email, is_active, created_at, updated_at) VALUES ('admin', 'admin', 'admin', 'admin@hproject.com', true, '2024-08-05 00:00:00', '2024-08-05 00:00:00');
INSERT INTO public.user(username, first_name, last_name, email, is_active, created_at, updated_at) VALUES ('hyunbin7303', 'kevin', 'park', 'hyunbin7303@gmail.com', true, '2024-08-05 00:00:00', '2024-08-05 00:00:00');
INSERT INTO public.user(username, first_name, last_name, email, is_active, created_at, updated_at) VALUES ('bumsoo1234', 'sam', 'kim', 'bumsoo1234@hproject.com', true, '2024-08-05 00:00:00', '2024-08-05 00:00:00');
INSERT INTO public.user(username, first_name, last_name, email, is_active, created_at, updated_at) VALUES ('testing1', 'test', 'check', 'testing1@hproject.com', true, '2024-08-05 00:00:00', '2024-08-05 00:00:00');
INSERT INTO public.user(username, first_name, last_name, email, is_active, created_at, updated_at) VALUES ('testing2', 'test', 'check', 'testing2@hproject.com', true, '2024-08-05 00:00:00', '2024-08-05 00:00:00');

INSERT INTO public.usergroup(id, name, description, type, thumbnailurl, is_active) VALUES (1, 'user group #1', 'Description for user group 1', 'normal', '', true);
INSERT INTO public.usergroup(id, name, description, type, thumbnailurl, is_active) VALUES (2, 'user group #2', 'Description for user group 2', 'normal', '', true);
INSERT INTO public.usergroup(id, name, description, type, thumbnailurl, is_active) VALUES (3, 'user group #3', 'Description for user group 3', 'normal', '', true);

INSERT INTO public.usergroup_user(usergroup_id, user_id) VALUES (1, 1);
INSERT INTO public.usergroup_user(usergroup_id, user_id) VALUES (1, 2);
INSERT INTO public.usergroup_user(usergroup_id, user_id) VALUES (1, 3);
INSERT INTO public.usergroup_user(usergroup_id, user_id) VALUES (2, 4);
INSERT INTO public.usergroup_user(usergroup_id, user_id) VALUES (2, 5);

INSERT INTO public.taskcontainer(id, name, description, is_active, activity_level, type, usergroup_id) VALUES ('5951f639-c8ce-4462-8b72-c57458c448fd', 'grovery', 'grocery container for my family', true, 0, 'normal', 1);
INSERT INTO public.taskcontainer(id, name, description, is_active, activity_level, type, usergroup_id) VALUES ('22095f67-168a-47f4-9d77-90cf27d77c89', 'chores', 'chores container for my family', true, 0, 'normal', 1);
INSERT INTO public.task(id, name, description, type, created_at, updated_at, target_date, priority, category, is_completed, is_important) VALUES ('94d277a0-245a-4155-aea3-29f6cbabd849', 'Apple', 'need this for apple pie', '', CURRENT_DATE,CURRENT_DATE,CURRENT_DATE + INTERVAL  '6 days', 'normal', 'grocery', false, false);
INSERT INTO public.task(id, name, description, type, created_at, updated_at, target_date, priority, category, is_completed, is_important) VALUES ('06e1840f-b5a9-4008-9add-7170272291d1', 'Banana', 'need this for breakfast', '', CURRENT_DATE,CURRENT_DATE,CURRENT_DATE + INTERVAL  '3 days', 'high', 'grocery', false, false);
INSERT INTO public.taskcontainer_task(taskcontainer_id, task_id) VALUES ('5951f639-c8ce-4462-8b72-c57458c448fd', '94d277a0-245a-4155-aea3-29f6cbabd849');
INSERT INTO public.taskcontainer_task(taskcontainer_id, task_id) VALUES ('5951f639-c8ce-4462-8b72-c57458c448fd', '06e1840f-b5a9-4008-9add-7170272291d1');
